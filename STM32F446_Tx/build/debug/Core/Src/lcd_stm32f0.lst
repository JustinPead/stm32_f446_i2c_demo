ARM GAS  C:\Users\justi\AppData\Local\Temp\ccpgLgQ8.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"lcd_stm32f0.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/lcd_stm32f0.c"
  20              		.section	.text.init_LCD_pins,"ax",%progbits
  21              		.align	1
  22              		.weak	init_LCD_pins
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	init_LCD_pins:
  28              	.LFB131:
   1:Core/Src/lcd_stm32f0.c **** //********************************************************************
   2:Core/Src/lcd_stm32f0.c **** //*                      EEE2046F STM32F0                            *
   3:Core/Src/lcd_stm32f0.c **** //*                         LCD MODULE                               *
   4:Core/Src/lcd_stm32f0.c **** //*==================================================================*
   5:Core/Src/lcd_stm32f0.c **** //* WRITTEN BY:    Copyright (C) Samuel Ginsberg 2004                *
   6:Core/Src/lcd_stm32f0.c **** //* PORTED TO STM32F0 dev board by James Gowans, 2014                *
   7:Core/Src/lcd_stm32f0.c **** //* MODIFIED BY:   Robyn Verrinder                                   *
   8:Core/Src/lcd_stm32f0.c **** //* MODIFIED BY:   Justin Pead for HAL                               *
   9:Core/Src/lcd_stm32f0.c **** //* DATE CREATED:  2004                                              *
  10:Core/Src/lcd_stm32f0.c **** //* PORTED:	   2014						                             *
  11:Core/Src/lcd_stm32f0.c **** //* MODIFIED:      20-09-2024                                        *
  12:Core/Src/lcd_stm32f0.c **** //*==================================================================*
  13:Core/Src/lcd_stm32f0.c **** //* PROGRAMMED IN: VSC                                               *
  14:Core/Src/lcd_stm32f0.c **** //* DEV. BOARD:    UCT STM32 Development Board                       *
  15:Core/Src/lcd_stm32f0.c **** //* TARGET:	   STMicroelectronics STM32F051C8                        *
  16:Core/Src/lcd_stm32f0.c **** //*==================================================================*
  17:Core/Src/lcd_stm32f0.c **** //* DESCRIPTION:   This code contains common functions to communicate*
  18:Core/Src/lcd_stm32f0.c **** //*                with the LCD module connected to the STM32 uC.    *
  19:Core/Src/lcd_stm32f0.c **** //*==================================================================*
  20:Core/Src/lcd_stm32f0.c **** //* LCD SETUP:     - 4 bit mode      (Upper 4 data lines D4-D7 used) *
  21:Core/Src/lcd_stm32f0.c **** //*                - Two lines used                                  *
  22:Core/Src/lcd_stm32f0.c **** //*                - Flashing cursor                                 *
  23:Core/Src/lcd_stm32f0.c **** //*==================================================================*
  24:Core/Src/lcd_stm32f0.c **** //* CONNECTIONS:                                                     *
  25:Core/Src/lcd_stm32f0.c **** //*------------------------------------------------------------------*
  26:Core/Src/lcd_stm32f0.c **** //* LCD PINS   | NAME                    | CONNECTED TO              *
  27:Core/Src/lcd_stm32f0.c **** //*------------------------------------------------------------------*
  28:Core/Src/lcd_stm32f0.c **** //* 1............VSS.......................GND                       *
  29:Core/Src/lcd_stm32f0.c **** //* 2............VDD.......................+5V                       *
  30:Core/Src/lcd_stm32f0.c **** //* 3............CONTRAST..................POT 2                     *
ARM GAS  C:\Users\justi\AppData\Local\Temp\ccpgLgQ8.s 			page 2


  31:Core/Src/lcd_stm32f0.c **** //* 4............RS  - Register Select.....PC14 (LCD_RS)             *
  32:Core/Src/lcd_stm32f0.c **** //* 5............RW  - Read/Write..........GND                       *
  33:Core/Src/lcd_stm32f0.c **** //* 6............E   - Enable..............PC15 (LCD_E)              *
  34:Core/Src/lcd_stm32f0.c **** //* 7............D0  - Data line 0.........GND                       *
  35:Core/Src/lcd_stm32f0.c **** //* 8............D1  - Data line 1.........GND                       *
  36:Core/Src/lcd_stm32f0.c **** //* 9............D2  - Data line 2.........GND                       *
  37:Core/Src/lcd_stm32f0.c **** //* 10...........D3  - Data line 3.........GND                       *
  38:Core/Src/lcd_stm32f0.c **** //* 11...........D4  - Data line 4.........PB8  (LCD_D4)             *
  39:Core/Src/lcd_stm32f0.c **** //* 12...........D5  - Data line 5.........PB9  (LCD_D5)             *
  40:Core/Src/lcd_stm32f0.c **** //* 13...........D6  - Data line 6.........PA12 (LCD_D6)             *
  41:Core/Src/lcd_stm32f0.c **** //* 14...........D7  - Data line 7.........PA15 (LCD_D7)             *
  42:Core/Src/lcd_stm32f0.c **** //* 15...........CATHLED...................NC                        *
  43:Core/Src/lcd_stm32f0.c **** //* 16...........ANODELED..................NC                        *
  44:Core/Src/lcd_stm32f0.c **** //********************************************************************
  45:Core/Src/lcd_stm32f0.c **** // INCLUDE FILES
  46:Core/Src/lcd_stm32f0.c **** //====================================================================
  47:Core/Src/lcd_stm32f0.c **** #include "lcd_stm32f0.h"
  48:Core/Src/lcd_stm32f0.c **** #include "stm32f4xx_hal.h"
  49:Core/Src/lcd_stm32f0.c **** #include "main.h"
  50:Core/Src/lcd_stm32f0.c **** //====================================================================
  51:Core/Src/lcd_stm32f0.c **** // SEND COMMAND CODE TO LCD - LCD_Command(command)
  52:Core/Src/lcd_stm32f0.c **** //====================================================================
  53:Core/Src/lcd_stm32f0.c **** // DESCRIPTION: This function sends a command to the LCD. Care is taken
  54:Core/Src/lcd_stm32f0.c **** //              not to interfere with the other lines on the port.
  55:Core/Src/lcd_stm32f0.c **** //
  56:Core/Src/lcd_stm32f0.c **** //              As we are using a microcontroller to control the LCD
  57:Core/Src/lcd_stm32f0.c **** //              we use 4-bit mode to save on number of lines used to
  58:Core/Src/lcd_stm32f0.c **** //              connect to the LCD. This means that an 8-bit command
  59:Core/Src/lcd_stm32f0.c **** //              must be split into two sets of 4-bits (upper and lower)
  60:Core/Src/lcd_stm32f0.c **** //              These sets must be transmitted
  61:Core/Src/lcd_stm32f0.c **** //====================================================================
  62:Core/Src/lcd_stm32f0.c **** // USEFUL COMMANDS:
  63:Core/Src/lcd_stm32f0.c **** //                  - POWER_UP:      Power up initialization for the lcd
  64:Core/Src/lcd_stm32f0.c **** //                  - FOURBIT_MODE:  Sets LCD for 4-bit mode
  65:Core/Src/lcd_stm32f0.c **** //                  - TWOLINE_MODE:  Sets up 2 lines and character size
  66:Core/Src/lcd_stm32f0.c **** //                  - SETUP_CURSOR:  Turn display on and set up cursor
  67:Core/Src/lcd_stm32f0.c **** //                  - CLEAR:         Clear screen
  68:Core/Src/lcd_stm32f0.c **** //                  - CURSOR_HOME:   Cursor home
  69:Core/Src/lcd_stm32f0.c **** //                  - LINE_TWO:      Line 2
  70:Core/Src/lcd_stm32f0.c **** //
  71:Core/Src/lcd_stm32f0.c **** //====================================================================
  72:Core/Src/lcd_stm32f0.c **** 
  73:Core/Src/lcd_stm32f0.c **** lcd mylcd;
  74:Core/Src/lcd_stm32f0.c **** 
  75:Core/Src/lcd_stm32f0.c **** void lcd_command(unsigned char command) {
  76:Core/Src/lcd_stm32f0.c ****     HAL_GPIO_WritePin(mylcd.RS_port,mylcd.RS_pin,0);
  77:Core/Src/lcd_stm32f0.c ****     // Register Select (RS)line low (data sent will now be read as commands)
  78:Core/Src/lcd_stm32f0.c ****     write_byte(command);    
  79:Core/Src/lcd_stm32f0.c ****     HAL_Delay(3);
  80:Core/Src/lcd_stm32f0.c **** }
  81:Core/Src/lcd_stm32f0.c **** 
  82:Core/Src/lcd_stm32f0.c **** //====================================================================
  83:Core/Src/lcd_stm32f0.c **** // INITIALISE LCD - LCD_Init()
  84:Core/Src/lcd_stm32f0.c **** //====================================================================
  85:Core/Src/lcd_stm32f0.c **** // DESCRIPTION: This function sets up the port lines for the LCD and
  86:Core/Src/lcd_stm32f0.c **** //              intialises the module for use.
  87:Core/Src/lcd_stm32f0.c **** //====================================================================
ARM GAS  C:\Users\justi\AppData\Local\Temp\ccpgLgQ8.s 			page 3


  88:Core/Src/lcd_stm32f0.c **** // LCD SETUP:     - 4 bit mode      (Upper 4 data lines D4-D7 used)
  89:Core/Src/lcd_stm32f0.c **** //                - Two lines used
  90:Core/Src/lcd_stm32f0.c **** //                - Flashing cursor
  91:Core/Src/lcd_stm32f0.c **** //====================================================================
  92:Core/Src/lcd_stm32f0.c **** 
  93:Core/Src/lcd_stm32f0.c **** __WEAK void init_LCD_pins(void) {
  29              		.loc 1 93 33 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  94:Core/Src/lcd_stm32f0.c ****     mylcd.data_pin_ports[3] = LCD_D7_GPIO_Port;
  34              		.loc 1 94 5 view .LVU1
  35              		.loc 1 94 29 is_stmt 0 view .LVU2
  36 0000 0D4B     		ldr	r3, .L2
  37 0002 0E4A     		ldr	r2, .L2+4
  38 0004 DA60     		str	r2, [r3, #12]
  95:Core/Src/lcd_stm32f0.c ****     mylcd.data_pin_ports[2] = LCD_D6_GPIO_Port;
  39              		.loc 1 95 5 is_stmt 1 view .LVU3
  40              		.loc 1 95 29 is_stmt 0 view .LVU4
  41 0006 9A60     		str	r2, [r3, #8]
  96:Core/Src/lcd_stm32f0.c ****     mylcd.data_pin_ports[1] = LCD_D5_GPIO_Port;
  42              		.loc 1 96 5 is_stmt 1 view .LVU5
  43              		.loc 1 96 29 is_stmt 0 view .LVU6
  44 0008 02F58062 		add	r2, r2, #1024
  45 000c 5A60     		str	r2, [r3, #4]
  97:Core/Src/lcd_stm32f0.c ****     mylcd.data_pin_ports[0] = LCD_D4_GPIO_Port;
  46              		.loc 1 97 5 is_stmt 1 view .LVU7
  47              		.loc 1 97 29 is_stmt 0 view .LVU8
  48 000e 1A60     		str	r2, [r3]
  98:Core/Src/lcd_stm32f0.c **** 
  99:Core/Src/lcd_stm32f0.c ****     mylcd.data_pin_pins[3] = LCD_D7_Pin;
  49              		.loc 1 99 5 is_stmt 1 view .LVU9
  50              		.loc 1 99 28 is_stmt 0 view .LVU10
  51 0010 4FF40042 		mov	r2, #32768
  52 0014 DA82     		strh	r2, [r3, #22]	@ movhi
 100:Core/Src/lcd_stm32f0.c ****     mylcd.data_pin_pins[2] = LCD_D6_Pin;
  53              		.loc 1 100 5 is_stmt 1 view .LVU11
  54              		.loc 1 100 28 is_stmt 0 view .LVU12
  55 0016 4FF48051 		mov	r1, #4096
  56 001a 9982     		strh	r1, [r3, #20]	@ movhi
 101:Core/Src/lcd_stm32f0.c ****     mylcd.data_pin_pins[1] = LCD_D5_Pin;
  57              		.loc 1 101 5 is_stmt 1 view .LVU13
  58              		.loc 1 101 28 is_stmt 0 view .LVU14
  59 001c 4FF40071 		mov	r1, #512
  60 0020 5982     		strh	r1, [r3, #18]	@ movhi
 102:Core/Src/lcd_stm32f0.c ****     mylcd.data_pin_pins[0] = LCD_D4_Pin;
  61              		.loc 1 102 5 is_stmt 1 view .LVU15
  62              		.loc 1 102 28 is_stmt 0 view .LVU16
  63 0022 4FF48071 		mov	r1, #256
  64 0026 1982     		strh	r1, [r3, #16]	@ movhi
 103:Core/Src/lcd_stm32f0.c ****     
 104:Core/Src/lcd_stm32f0.c ****     mylcd.RS_port = LCD_RS_GPIO_Port;
  65              		.loc 1 104 5 is_stmt 1 view .LVU17
  66              		.loc 1 104 19 is_stmt 0 view .LVU18
  67 0028 0549     		ldr	r1, .L2+8
  68 002a 9961     		str	r1, [r3, #24]
ARM GAS  C:\Users\justi\AppData\Local\Temp\ccpgLgQ8.s 			page 4


 105:Core/Src/lcd_stm32f0.c ****     mylcd.RS_pin = LCD_RS_Pin;
  69              		.loc 1 105 5 is_stmt 1 view .LVU19
  70              		.loc 1 105 18 is_stmt 0 view .LVU20
  71 002c 4FF48040 		mov	r0, #16384
  72 0030 9883     		strh	r0, [r3, #28]	@ movhi
 106:Core/Src/lcd_stm32f0.c **** 
 107:Core/Src/lcd_stm32f0.c ****     mylcd.E_port = LCD_E_GPIO_Port;
  73              		.loc 1 107 5 is_stmt 1 view .LVU21
  74              		.loc 1 107 18 is_stmt 0 view .LVU22
  75 0032 1962     		str	r1, [r3, #32]
 108:Core/Src/lcd_stm32f0.c ****     mylcd.E_pin = LCD_E_Pin;
  76              		.loc 1 108 5 is_stmt 1 view .LVU23
  77              		.loc 1 108 17 is_stmt 0 view .LVU24
  78 0034 9A84     		strh	r2, [r3, #36]	@ movhi
 109:Core/Src/lcd_stm32f0.c **** }
  79              		.loc 1 109 1 view .LVU25
  80 0036 7047     		bx	lr
  81              	.L3:
  82              		.align	2
  83              	.L2:
  84 0038 00000000 		.word	mylcd
  85 003c 00000240 		.word	1073872896
  86 0040 00080240 		.word	1073874944
  87              		.cfi_endproc
  88              	.LFE131:
  90              		.section	.text.delay,"ax",%progbits
  91              		.align	1
  92              		.global	delay
  93              		.syntax unified
  94              		.thumb
  95              		.thumb_func
  97              	delay:
  98              	.LVL0:
  99              	.LFB136:
 110:Core/Src/lcd_stm32f0.c **** 
 111:Core/Src/lcd_stm32f0.c **** void init_LCD(void)
 112:Core/Src/lcd_stm32f0.c **** {
 113:Core/Src/lcd_stm32f0.c ****     HAL_Delay(30);			// Allow the LCD some power up time (~30ms)
 114:Core/Src/lcd_stm32f0.c **** 
 115:Core/Src/lcd_stm32f0.c ****     volatile uint32_t freq = HAL_RCC_GetHCLKFreq();
 116:Core/Src/lcd_stm32f0.c ****     //Therefore 1us is 
 117:Core/Src/lcd_stm32f0.c ****     mylcd.nops_per_ten_us = ((freq/100000)/CYCLES_PER_NOP_IN_FOR);
 118:Core/Src/lcd_stm32f0.c **** 
 119:Core/Src/lcd_stm32f0.c ****     /*
 120:Core/Src/lcd_stm32f0.c ****     mylcd.size[0] = 16;
 121:Core/Src/lcd_stm32f0.c ****     mylcd.size[1] = 2;
 122:Core/Src/lcd_stm32f0.c **** 
 123:Core/Src/lcd_stm32f0.c ****     mylcd.cursor[0] = 0;
 124:Core/Src/lcd_stm32f0.c ****     mylcd.cursor[1] = 0;
 125:Core/Src/lcd_stm32f0.c **** 
 126:Core/Src/lcd_stm32f0.c ****     mylcd.position[0] = 0;
 127:Core/Src/lcd_stm32f0.c ****     mylcd.position[1] = 0;
 128:Core/Src/lcd_stm32f0.c ****     */
 129:Core/Src/lcd_stm32f0.c **** 
 130:Core/Src/lcd_stm32f0.c ****     lcd_command(POWER_UP);		// Power up initialization for the lcd
 131:Core/Src/lcd_stm32f0.c ****     lcd_command(FOURBIT_MODE);		// Set LCD into 4 bit mode
 132:Core/Src/lcd_stm32f0.c ****     lcd_command(DISPLAY_ON);		// Turn display on and set up cursor
ARM GAS  C:\Users\justi\AppData\Local\Temp\ccpgLgQ8.s 			page 5


 133:Core/Src/lcd_stm32f0.c ****     lcd_command(TWOLINE_MODE);		// Set up 2 lines and character size
 134:Core/Src/lcd_stm32f0.c ****     lcd_command(CLEAR);			// Clear display
 135:Core/Src/lcd_stm32f0.c **** }
 136:Core/Src/lcd_stm32f0.c **** 
 137:Core/Src/lcd_stm32f0.c **** //====================================================================
 138:Core/Src/lcd_stm32f0.c **** // WRITE A SINGLE CHARACTER TO THE LCD - LCD_PutChar(character)
 139:Core/Src/lcd_stm32f0.c **** //====================================================================
 140:Core/Src/lcd_stm32f0.c **** // DESCRIPTION: Puts a single character on the LCD at the next position
 141:Core/Src/lcd_stm32f0.c **** //              on the screen. The character to be printed is in the input
 142:Core/Src/lcd_stm32f0.c **** //              parameter. For numbers, letters and other common characters
 143:Core/Src/lcd_stm32f0.c **** //              the ASCII code will produce correct display.
 144:Core/Src/lcd_stm32f0.c **** //
 145:Core/Src/lcd_stm32f0.c **** //              Refer to the Hitachi HD44780 datasheet for full character
 146:Core/Src/lcd_stm32f0.c **** //              set information.
 147:Core/Src/lcd_stm32f0.c **** //====================================================================
 148:Core/Src/lcd_stm32f0.c **** 
 149:Core/Src/lcd_stm32f0.c **** void lcd_putchar(unsigned char character)
 150:Core/Src/lcd_stm32f0.c **** {
 151:Core/Src/lcd_stm32f0.c ****     HAL_GPIO_WritePin(mylcd.RS_port,mylcd.RS_pin,1);//	GPIOC->BSRR |= LCD_RS_SET;	// Register Selec
 152:Core/Src/lcd_stm32f0.c ****     write_byte(character);
 153:Core/Src/lcd_stm32f0.c ****     //mylcd.position[mylcd.cursor[1]]++;
 154:Core/Src/lcd_stm32f0.c **** }
 155:Core/Src/lcd_stm32f0.c **** 
 156:Core/Src/lcd_stm32f0.c **** /*
 157:Core/Src/lcd_stm32f0.c **** void lcd_clear_screen(void) {
 158:Core/Src/lcd_stm32f0.c ****     lcd_command(CLEAR);
 159:Core/Src/lcd_stm32f0.c ****     mylcd.position[0] = 0;
 160:Core/Src/lcd_stm32f0.c ****     mylcd.position[1] = 0;
 161:Core/Src/lcd_stm32f0.c **** 
 162:Core/Src/lcd_stm32f0.c ****     lcd_cursor_home();
 163:Core/Src/lcd_stm32f0.c **** }
 164:Core/Src/lcd_stm32f0.c **** 
 165:Core/Src/lcd_stm32f0.c **** void lcd_cursor_home(void) {
 166:Core/Src/lcd_stm32f0.c ****     lcd_command(CURSOR_HOME);
 167:Core/Src/lcd_stm32f0.c ****     mylcd.cursor[0] = 0;
 168:Core/Src/lcd_stm32f0.c ****     mylcd.cursor[1] = 0;
 169:Core/Src/lcd_stm32f0.c **** }
 170:Core/Src/lcd_stm32f0.c **** 
 171:Core/Src/lcd_stm32f0.c **** void lcd_line_two(void) {
 172:Core/Src/lcd_stm32f0.c ****     lcd_command(LINE_TWO);
 173:Core/Src/lcd_stm32f0.c ****     mylcd.cursor[1] = 0;
 174:Core/Src/lcd_stm32f0.c ****     mylcd.cursor[1] = 1;
 175:Core/Src/lcd_stm32f0.c **** }
 176:Core/Src/lcd_stm32f0.c **** 
 177:Core/Src/lcd_stm32f0.c **** */
 178:Core/Src/lcd_stm32f0.c **** 
 179:Core/Src/lcd_stm32f0.c **** //====================================================================
 180:Core/Src/lcd_stm32f0.c **** // WRITE A STRING TO THE LCD - LCD_PutString(ptr_String)
 181:Core/Src/lcd_stm32f0.c **** //====================================================================
 182:Core/Src/lcd_stm32f0.c **** // DESCRIPTION: Writes a string to the LCD
 183:Core/Src/lcd_stm32f0.c **** //====================================================================
 184:Core/Src/lcd_stm32f0.c **** 
 185:Core/Src/lcd_stm32f0.c **** void lcd_putstring(char *instring) {
 186:Core/Src/lcd_stm32f0.c ****     unsigned char count = 0;
 187:Core/Src/lcd_stm32f0.c **** 
 188:Core/Src/lcd_stm32f0.c ****     while (instring[count]) { // Until the null terminator is reached
 189:Core/Src/lcd_stm32f0.c ****     	lcd_putchar(instring[count]);	// Write each character to LCD
ARM GAS  C:\Users\justi\AppData\Local\Temp\ccpgLgQ8.s 			page 6


 190:Core/Src/lcd_stm32f0.c **** 	    count++;
 191:Core/Src/lcd_stm32f0.c **** 	}
 192:Core/Src/lcd_stm32f0.c **** }
 193:Core/Src/lcd_stm32f0.c **** 
 194:Core/Src/lcd_stm32f0.c **** 
 195:Core/Src/lcd_stm32f0.c **** //====================================================================
 196:Core/Src/lcd_stm32f0.c **** // PULSE STROBE - Pulse_Strobe()
 197:Core/Src/lcd_stm32f0.c **** //====================================================================
 198:Core/Src/lcd_stm32f0.c **** // DESCRIPTION: Pulse the strobe line of the LCD to indicate that data is ready.
 199:Core/Src/lcd_stm32f0.c **** //====================================================================
 200:Core/Src/lcd_stm32f0.c **** 
 201:Core/Src/lcd_stm32f0.c **** void pulse_strobe(void)
 202:Core/Src/lcd_stm32f0.c **** {    
 203:Core/Src/lcd_stm32f0.c ****     delay(2);				// Delay
 204:Core/Src/lcd_stm32f0.c ****     HAL_GPIO_WritePin(mylcd.E_port,mylcd.E_pin,1);
 205:Core/Src/lcd_stm32f0.c ****     //GPIOC->BSRR |= LCD_EN_SET;		// pull E (PC15) HIGH
 206:Core/Src/lcd_stm32f0.c **** 
 207:Core/Src/lcd_stm32f0.c ****     delay(2);				// Delay
 208:Core/Src/lcd_stm32f0.c ****     HAL_GPIO_WritePin(mylcd.E_port,mylcd.E_pin,0);
 209:Core/Src/lcd_stm32f0.c ****     //GPIOC->BSRR |= LCD_EN_RESET;	// Take EN LOW
 210:Core/Src/lcd_stm32f0.c **** 
 211:Core/Src/lcd_stm32f0.c ****     delay(2);				// Delay
 212:Core/Src/lcd_stm32f0.c ****     HAL_GPIO_WritePin(mylcd.E_port,mylcd.E_pin,1);
 213:Core/Src/lcd_stm32f0.c ****     //GPIOC->BSRR |= LCD_EN_SET;		// Take EN HIGH
 214:Core/Src/lcd_stm32f0.c **** }
 215:Core/Src/lcd_stm32f0.c **** 
 216:Core/Src/lcd_stm32f0.c **** 
 217:Core/Src/lcd_stm32f0.c **** //====================================================================
 218:Core/Src/lcd_stm32f0.c **** // LOOP DELAY - delay(microseconds)
 219:Core/Src/lcd_stm32f0.c **** //====================================================================
 220:Core/Src/lcd_stm32f0.c **** // DESCRIPTION: A delay used by the LCD functions.
 221:Core/Src/lcd_stm32f0.c **** //====================================================================
 222:Core/Src/lcd_stm32f0.c **** 
 223:Core/Src/lcd_stm32f0.c **** void delay(unsigned int tens_of_microseconds) {
 100              		.loc 1 223 47 is_stmt 1 view -0
 101              		.cfi_startproc
 102              		@ args = 0, pretend = 0, frame = 8
 103              		@ frame_needed = 0, uses_anonymous_args = 0
 104              		@ link register save eliminated.
 105              		.loc 1 223 47 is_stmt 0 view .LVU27
 106 0000 82B0     		sub	sp, sp, #8
 107              		.cfi_def_cfa_offset 8
 224:Core/Src/lcd_stm32f0.c ****     
 225:Core/Src/lcd_stm32f0.c ****     volatile unsigned int counter;
 108              		.loc 1 225 5 is_stmt 1 view .LVU28
 226:Core/Src/lcd_stm32f0.c ****     for(counter = 0; counter<(tens_of_microseconds*mylcd.nops_per_ten_us); counter++)
 109              		.loc 1 226 5 view .LVU29
 110              		.loc 1 226 17 is_stmt 0 view .LVU30
 111 0002 0023     		movs	r3, #0
 112 0004 0193     		str	r3, [sp, #4]
 113              		.loc 1 226 5 view .LVU31
 114 0006 03E0     		b	.L5
 115              	.L6:
 227:Core/Src/lcd_stm32f0.c ****     {
 228:Core/Src/lcd_stm32f0.c ****         __asm("nop");
 116              		.loc 1 228 9 is_stmt 1 discriminator 3 view .LVU32
 117              		.syntax unified
ARM GAS  C:\Users\justi\AppData\Local\Temp\ccpgLgQ8.s 			page 7


 118              	@ 228 "Core/Src/lcd_stm32f0.c" 1
 119 0008 00BF     		nop
 120              	@ 0 "" 2
 226:Core/Src/lcd_stm32f0.c ****     for(counter = 0; counter<(tens_of_microseconds*mylcd.nops_per_ten_us); counter++)
 121              		.loc 1 226 83 discriminator 3 view .LVU33
 122              		.thumb
 123              		.syntax unified
 124 000a 019B     		ldr	r3, [sp, #4]
 125 000c 0133     		adds	r3, r3, #1
 126 000e 0193     		str	r3, [sp, #4]
 127              	.L5:
 226:Core/Src/lcd_stm32f0.c ****     for(counter = 0; counter<(tens_of_microseconds*mylcd.nops_per_ten_us); counter++)
 128              		.loc 1 226 29 discriminator 1 view .LVU34
 226:Core/Src/lcd_stm32f0.c ****     for(counter = 0; counter<(tens_of_microseconds*mylcd.nops_per_ten_us); counter++)
 129              		.loc 1 226 57 is_stmt 0 discriminator 1 view .LVU35
 130 0010 044B     		ldr	r3, .L8
 131 0012 9B6A     		ldr	r3, [r3, #40]
 226:Core/Src/lcd_stm32f0.c ****     for(counter = 0; counter<(tens_of_microseconds*mylcd.nops_per_ten_us); counter++)
 132              		.loc 1 226 51 discriminator 1 view .LVU36
 133 0014 00FB03F3 		mul	r3, r0, r3
 226:Core/Src/lcd_stm32f0.c ****     for(counter = 0; counter<(tens_of_microseconds*mylcd.nops_per_ten_us); counter++)
 134              		.loc 1 226 29 discriminator 1 view .LVU37
 135 0018 019A     		ldr	r2, [sp, #4]
 136 001a 9342     		cmp	r3, r2
 137 001c F4D8     		bhi	.L6
 229:Core/Src/lcd_stm32f0.c ****     }
 230:Core/Src/lcd_stm32f0.c ****    //HAL_Delay(1);
 231:Core/Src/lcd_stm32f0.c **** }
 138              		.loc 1 231 1 view .LVU38
 139 001e 02B0     		add	sp, sp, #8
 140              		.cfi_def_cfa_offset 0
 141              		@ sp needed
 142 0020 7047     		bx	lr
 143              	.L9:
 144 0022 00BF     		.align	2
 145              	.L8:
 146 0024 00000000 		.word	mylcd
 147              		.cfi_endproc
 148              	.LFE136:
 150              		.section	.text.pulse_strobe,"ax",%progbits
 151              		.align	1
 152              		.global	pulse_strobe
 153              		.syntax unified
 154              		.thumb
 155              		.thumb_func
 157              	pulse_strobe:
 158              	.LFB135:
 202:Core/Src/lcd_stm32f0.c ****     delay(2);				// Delay
 159              		.loc 1 202 1 is_stmt 1 view -0
 160              		.cfi_startproc
 161              		@ args = 0, pretend = 0, frame = 0
 162              		@ frame_needed = 0, uses_anonymous_args = 0
 163 0000 10B5     		push	{r4, lr}
 164              		.cfi_def_cfa_offset 8
 165              		.cfi_offset 4, -8
 166              		.cfi_offset 14, -4
 203:Core/Src/lcd_stm32f0.c ****     HAL_GPIO_WritePin(mylcd.E_port,mylcd.E_pin,1);
ARM GAS  C:\Users\justi\AppData\Local\Temp\ccpgLgQ8.s 			page 8


 167              		.loc 1 203 5 view .LVU40
 168 0002 0220     		movs	r0, #2
 169 0004 FFF7FEFF 		bl	delay
 170              	.LVL1:
 204:Core/Src/lcd_stm32f0.c ****     //GPIOC->BSRR |= LCD_EN_SET;		// pull E (PC15) HIGH
 171              		.loc 1 204 5 view .LVU41
 172 0008 0B4C     		ldr	r4, .L12
 173 000a 0122     		movs	r2, #1
 174 000c A18C     		ldrh	r1, [r4, #36]
 175 000e 206A     		ldr	r0, [r4, #32]
 176 0010 FFF7FEFF 		bl	HAL_GPIO_WritePin
 177              	.LVL2:
 207:Core/Src/lcd_stm32f0.c ****     HAL_GPIO_WritePin(mylcd.E_port,mylcd.E_pin,0);
 178              		.loc 1 207 5 view .LVU42
 179 0014 0220     		movs	r0, #2
 180 0016 FFF7FEFF 		bl	delay
 181              	.LVL3:
 208:Core/Src/lcd_stm32f0.c ****     //GPIOC->BSRR |= LCD_EN_RESET;	// Take EN LOW
 182              		.loc 1 208 5 view .LVU43
 183 001a 0022     		movs	r2, #0
 184 001c A18C     		ldrh	r1, [r4, #36]
 185 001e 206A     		ldr	r0, [r4, #32]
 186 0020 FFF7FEFF 		bl	HAL_GPIO_WritePin
 187              	.LVL4:
 211:Core/Src/lcd_stm32f0.c ****     HAL_GPIO_WritePin(mylcd.E_port,mylcd.E_pin,1);
 188              		.loc 1 211 5 view .LVU44
 189 0024 0220     		movs	r0, #2
 190 0026 FFF7FEFF 		bl	delay
 191              	.LVL5:
 212:Core/Src/lcd_stm32f0.c ****     //GPIOC->BSRR |= LCD_EN_SET;		// Take EN HIGH
 192              		.loc 1 212 5 view .LVU45
 193 002a 0122     		movs	r2, #1
 194 002c A18C     		ldrh	r1, [r4, #36]
 195 002e 206A     		ldr	r0, [r4, #32]
 196 0030 FFF7FEFF 		bl	HAL_GPIO_WritePin
 197              	.LVL6:
 214:Core/Src/lcd_stm32f0.c **** 
 198              		.loc 1 214 1 is_stmt 0 view .LVU46
 199 0034 10BD     		pop	{r4, pc}
 200              	.L13:
 201 0036 00BF     		.align	2
 202              	.L12:
 203 0038 00000000 		.word	mylcd
 204              		.cfi_endproc
 205              	.LFE135:
 207              		.section	.text.check_bit,"ax",%progbits
 208              		.align	1
 209              		.global	check_bit
 210              		.syntax unified
 211              		.thumb
 212              		.thumb_func
 214              	check_bit:
 215              	.LVL7:
 216              	.LFB137:
 232:Core/Src/lcd_stm32f0.c **** 
 233:Core/Src/lcd_stm32f0.c **** int8_t check_bit(uint8_t value,uint8_t bit_number) {
 217              		.loc 1 233 52 is_stmt 1 view -0
ARM GAS  C:\Users\justi\AppData\Local\Temp\ccpgLgQ8.s 			page 9


 218              		.cfi_startproc
 219              		@ args = 0, pretend = 0, frame = 0
 220              		@ frame_needed = 0, uses_anonymous_args = 0
 221              		@ link register save eliminated.
 234:Core/Src/lcd_stm32f0.c ****     if(bit_number > 7 || bit_number < 0) {
 222              		.loc 1 234 5 view .LVU48
 223              		.loc 1 234 7 is_stmt 0 view .LVU49
 224 0000 0729     		cmp	r1, #7
 225 0002 05D8     		bhi	.L16
 235:Core/Src/lcd_stm32f0.c ****         return -1;
 236:Core/Src/lcd_stm32f0.c ****     }
 237:Core/Src/lcd_stm32f0.c ****     if ((value & (1<<bit_number)) != 0) {
 226              		.loc 1 237 5 is_stmt 1 view .LVU50
 227              		.loc 1 237 35 is_stmt 0 view .LVU51
 228 0004 0841     		asrs	r0, r0, r1
 229              	.LVL8:
 230              		.loc 1 237 8 view .LVU52
 231 0006 10F0010F 		tst	r0, #1
 232 000a 04D1     		bne	.L17
 238:Core/Src/lcd_stm32f0.c ****         return 1;
 239:Core/Src/lcd_stm32f0.c ****     }
 240:Core/Src/lcd_stm32f0.c ****     return 0;
 233              		.loc 1 240 12 view .LVU53
 234 000c 0020     		movs	r0, #0
 235 000e 7047     		bx	lr
 236              	.LVL9:
 237              	.L16:
 235:Core/Src/lcd_stm32f0.c ****         return -1;
 238              		.loc 1 235 16 view .LVU54
 239 0010 4FF0FF30 		mov	r0, #-1
 240              	.LVL10:
 235:Core/Src/lcd_stm32f0.c ****         return -1;
 241              		.loc 1 235 16 view .LVU55
 242 0014 7047     		bx	lr
 243              	.L17:
 238:Core/Src/lcd_stm32f0.c ****         return 1;
 244              		.loc 1 238 16 view .LVU56
 245 0016 0120     		movs	r0, #1
 241:Core/Src/lcd_stm32f0.c **** }
 246              		.loc 1 241 1 view .LVU57
 247 0018 7047     		bx	lr
 248              		.cfi_endproc
 249              	.LFE137:
 251              		.section	.text.write_byte,"ax",%progbits
 252              		.align	1
 253              		.global	write_byte
 254              		.syntax unified
 255              		.thumb
 256              		.thumb_func
 258              	write_byte:
 259              	.LVL11:
 260              	.LFB138:
 242:Core/Src/lcd_stm32f0.c **** 
 243:Core/Src/lcd_stm32f0.c **** void write_byte(uint8_t byte_in) {
 261              		.loc 1 243 34 is_stmt 1 view -0
 262              		.cfi_startproc
 263              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\justi\AppData\Local\Temp\ccpgLgQ8.s 			page 10


 264              		@ frame_needed = 0, uses_anonymous_args = 0
 265              		.loc 1 243 34 is_stmt 0 view .LVU59
 266 0000 70B5     		push	{r4, r5, r6, lr}
 267              		.cfi_def_cfa_offset 16
 268              		.cfi_offset 4, -16
 269              		.cfi_offset 5, -12
 270              		.cfi_offset 6, -8
 271              		.cfi_offset 14, -4
 272 0002 0646     		mov	r6, r0
 244:Core/Src/lcd_stm32f0.c ****     for (int8_t i = 7;i>=4;i--) {
 273              		.loc 1 244 5 is_stmt 1 view .LVU60
 274              	.LBB2:
 275              		.loc 1 244 10 view .LVU61
 276              	.LVL12:
 277              		.loc 1 244 17 is_stmt 0 view .LVU62
 278 0004 0724     		movs	r4, #7
 279              		.loc 1 244 5 view .LVU63
 280 0006 0BE0     		b	.L19
 281              	.LVL13:
 282              	.L20:
 245:Core/Src/lcd_stm32f0.c ****         if (check_bit(byte_in,i)) { // Select bit 7-4 of byte_in, if HIGH set Data line 
 246:Core/Src/lcd_stm32f0.c ****             HAL_GPIO_WritePin(mylcd.data_pin_ports[i-4],mylcd.data_pin_pins[i-4],1);
 247:Core/Src/lcd_stm32f0.c ****         } else {// else RESET
 248:Core/Src/lcd_stm32f0.c ****             HAL_GPIO_WritePin(mylcd.data_pin_ports[i-4],mylcd.data_pin_pins[i-4],0);
 283              		.loc 1 248 13 is_stmt 1 view .LVU64
 284              		.loc 1 248 53 is_stmt 0 view .LVU65
 285 0008 201F     		subs	r0, r4, #4
 286              		.loc 1 248 13 view .LVU66
 287 000a 234B     		ldr	r3, .L30
 288 000c 0434     		adds	r4, r4, #4
 289              	.LVL14:
 290              		.loc 1 248 13 view .LVU67
 291 000e 0022     		movs	r2, #0
 292 0010 33F81410 		ldrh	r1, [r3, r4, lsl #1]
 293 0014 53F82000 		ldr	r0, [r3, r0, lsl #2]
 294 0018 FFF7FEFF 		bl	HAL_GPIO_WritePin
 295              	.LVL15:
 296              	.L21:
 244:Core/Src/lcd_stm32f0.c ****     for (int8_t i = 7;i>=4;i--) {
 297              		.loc 1 244 29 is_stmt 1 discriminator 2 view .LVU68
 298 001c 013D     		subs	r5, r5, #1
 299              	.LVL16:
 244:Core/Src/lcd_stm32f0.c ****     for (int8_t i = 7;i>=4;i--) {
 300              		.loc 1 244 29 is_stmt 0 discriminator 2 view .LVU69
 301 001e 6CB2     		sxtb	r4, r5
 302              	.LVL17:
 303              	.L19:
 244:Core/Src/lcd_stm32f0.c ****     for (int8_t i = 7;i>=4;i--) {
 304              		.loc 1 244 24 is_stmt 1 discriminator 1 view .LVU70
 305 0020 032C     		cmp	r4, #3
 306 0022 11DD     		ble	.L28
 245:Core/Src/lcd_stm32f0.c ****         if (check_bit(byte_in,i)) { // Select bit 7-4 of byte_in, if HIGH set Data line 
 307              		.loc 1 245 9 view .LVU71
 245:Core/Src/lcd_stm32f0.c ****         if (check_bit(byte_in,i)) { // Select bit 7-4 of byte_in, if HIGH set Data line 
 308              		.loc 1 245 13 is_stmt 0 view .LVU72
 309 0024 E5B2     		uxtb	r5, r4
 310 0026 2946     		mov	r1, r5
ARM GAS  C:\Users\justi\AppData\Local\Temp\ccpgLgQ8.s 			page 11


 311 0028 3046     		mov	r0, r6
 312 002a FFF7FEFF 		bl	check_bit
 313              	.LVL18:
 245:Core/Src/lcd_stm32f0.c ****         if (check_bit(byte_in,i)) { // Select bit 7-4 of byte_in, if HIGH set Data line 
 314              		.loc 1 245 12 view .LVU73
 315 002e 0028     		cmp	r0, #0
 316 0030 EAD0     		beq	.L20
 246:Core/Src/lcd_stm32f0.c ****         } else {// else RESET
 317              		.loc 1 246 13 is_stmt 1 view .LVU74
 246:Core/Src/lcd_stm32f0.c ****         } else {// else RESET
 318              		.loc 1 246 53 is_stmt 0 view .LVU75
 319 0032 201F     		subs	r0, r4, #4
 246:Core/Src/lcd_stm32f0.c ****         } else {// else RESET
 320              		.loc 1 246 13 view .LVU76
 321 0034 184B     		ldr	r3, .L30
 322 0036 0434     		adds	r4, r4, #4
 323              	.LVL19:
 246:Core/Src/lcd_stm32f0.c ****         } else {// else RESET
 324              		.loc 1 246 13 view .LVU77
 325 0038 0122     		movs	r2, #1
 326 003a 33F81410 		ldrh	r1, [r3, r4, lsl #1]
 327 003e 53F82000 		ldr	r0, [r3, r0, lsl #2]
 328 0042 FFF7FEFF 		bl	HAL_GPIO_WritePin
 329              	.LVL20:
 330 0046 E9E7     		b	.L21
 331              	.LVL21:
 332              	.L28:
 246:Core/Src/lcd_stm32f0.c ****         } else {// else RESET
 333              		.loc 1 246 13 view .LVU78
 334              	.LBE2:
 249:Core/Src/lcd_stm32f0.c ****         }
 250:Core/Src/lcd_stm32f0.c ****     }
 251:Core/Src/lcd_stm32f0.c ****     pulse_strobe ();		// Send data
 335              		.loc 1 251 5 is_stmt 1 view .LVU79
 336 0048 FFF7FEFF 		bl	pulse_strobe
 337              	.LVL22:
 252:Core/Src/lcd_stm32f0.c ****     for (int8_t i = 3;i>=0;i--) {
 338              		.loc 1 252 5 view .LVU80
 339              	.LBB3:
 340              		.loc 1 252 10 view .LVU81
 341              		.loc 1 252 17 is_stmt 0 view .LVU82
 342 004c 0324     		movs	r4, #3
 343              	.LVL23:
 344              		.loc 1 252 5 view .LVU83
 345 004e 0BE0     		b	.L23
 346              	.LVL24:
 347              	.L24:
 253:Core/Src/lcd_stm32f0.c ****         if (check_bit(byte_in,i)) { // Select bit 3-0 of command, if HIGH set Data line 
 254:Core/Src/lcd_stm32f0.c ****             HAL_GPIO_WritePin(mylcd.data_pin_ports[i],mylcd.data_pin_pins[i],1);
 255:Core/Src/lcd_stm32f0.c ****         } else {// else RESET
 256:Core/Src/lcd_stm32f0.c ****             HAL_GPIO_WritePin(mylcd.data_pin_ports[i],mylcd.data_pin_pins[i],0);
 348              		.loc 1 256 13 is_stmt 1 view .LVU84
 349 0050 114B     		ldr	r3, .L30
 350 0052 04F10801 		add	r1, r4, #8
 351 0056 0022     		movs	r2, #0
 352 0058 33F81110 		ldrh	r1, [r3, r1, lsl #1]
 353 005c 53F82400 		ldr	r0, [r3, r4, lsl #2]
ARM GAS  C:\Users\justi\AppData\Local\Temp\ccpgLgQ8.s 			page 12


 354 0060 FFF7FEFF 		bl	HAL_GPIO_WritePin
 355              	.LVL25:
 356              	.L25:
 252:Core/Src/lcd_stm32f0.c ****     for (int8_t i = 3;i>=0;i--) {
 357              		.loc 1 252 29 discriminator 2 view .LVU85
 358 0064 013D     		subs	r5, r5, #1
 359 0066 6CB2     		sxtb	r4, r5
 360              	.LVL26:
 361              	.L23:
 252:Core/Src/lcd_stm32f0.c ****     for (int8_t i = 3;i>=0;i--) {
 362              		.loc 1 252 24 discriminator 1 view .LVU86
 363 0068 002C     		cmp	r4, #0
 364 006a 11DB     		blt	.L29
 253:Core/Src/lcd_stm32f0.c ****         if (check_bit(byte_in,i)) { // Select bit 3-0 of command, if HIGH set Data line 
 365              		.loc 1 253 9 view .LVU87
 253:Core/Src/lcd_stm32f0.c ****         if (check_bit(byte_in,i)) { // Select bit 3-0 of command, if HIGH set Data line 
 366              		.loc 1 253 13 is_stmt 0 view .LVU88
 367 006c E5B2     		uxtb	r5, r4
 368 006e 2946     		mov	r1, r5
 369 0070 3046     		mov	r0, r6
 370 0072 FFF7FEFF 		bl	check_bit
 371              	.LVL27:
 253:Core/Src/lcd_stm32f0.c ****         if (check_bit(byte_in,i)) { // Select bit 3-0 of command, if HIGH set Data line 
 372              		.loc 1 253 12 view .LVU89
 373 0076 0028     		cmp	r0, #0
 374 0078 EAD0     		beq	.L24
 254:Core/Src/lcd_stm32f0.c ****         } else {// else RESET
 375              		.loc 1 254 13 is_stmt 1 view .LVU90
 376 007a 074B     		ldr	r3, .L30
 377 007c 04F10801 		add	r1, r4, #8
 378 0080 0122     		movs	r2, #1
 379 0082 33F81110 		ldrh	r1, [r3, r1, lsl #1]
 380 0086 53F82400 		ldr	r0, [r3, r4, lsl #2]
 381 008a FFF7FEFF 		bl	HAL_GPIO_WritePin
 382              	.LVL28:
 383 008e E9E7     		b	.L25
 384              	.L29:
 385              	.LBE3:
 257:Core/Src/lcd_stm32f0.c ****         }
 258:Core/Src/lcd_stm32f0.c ****     }
 259:Core/Src/lcd_stm32f0.c ****     pulse_strobe();			// Send data
 386              		.loc 1 259 5 view .LVU91
 387 0090 FFF7FEFF 		bl	pulse_strobe
 388              	.LVL29:
 260:Core/Src/lcd_stm32f0.c **** }
 389              		.loc 1 260 1 is_stmt 0 view .LVU92
 390 0094 70BD     		pop	{r4, r5, r6, pc}
 391              	.LVL30:
 392              	.L31:
 393              		.loc 1 260 1 view .LVU93
 394 0096 00BF     		.align	2
 395              	.L30:
 396 0098 00000000 		.word	mylcd
 397              		.cfi_endproc
 398              	.LFE138:
 400              		.section	.text.lcd_command,"ax",%progbits
 401              		.align	1
ARM GAS  C:\Users\justi\AppData\Local\Temp\ccpgLgQ8.s 			page 13


 402              		.global	lcd_command
 403              		.syntax unified
 404              		.thumb
 405              		.thumb_func
 407              	lcd_command:
 408              	.LVL31:
 409              	.LFB130:
  75:Core/Src/lcd_stm32f0.c ****     HAL_GPIO_WritePin(mylcd.RS_port,mylcd.RS_pin,0);
 410              		.loc 1 75 41 is_stmt 1 view -0
 411              		.cfi_startproc
 412              		@ args = 0, pretend = 0, frame = 0
 413              		@ frame_needed = 0, uses_anonymous_args = 0
  75:Core/Src/lcd_stm32f0.c ****     HAL_GPIO_WritePin(mylcd.RS_port,mylcd.RS_pin,0);
 414              		.loc 1 75 41 is_stmt 0 view .LVU95
 415 0000 10B5     		push	{r4, lr}
 416              		.cfi_def_cfa_offset 8
 417              		.cfi_offset 4, -8
 418              		.cfi_offset 14, -4
 419 0002 0446     		mov	r4, r0
  76:Core/Src/lcd_stm32f0.c ****     // Register Select (RS)line low (data sent will now be read as commands)
 420              		.loc 1 76 5 is_stmt 1 view .LVU96
 421 0004 064B     		ldr	r3, .L34
 422 0006 0022     		movs	r2, #0
 423 0008 998B     		ldrh	r1, [r3, #28]
 424 000a 9869     		ldr	r0, [r3, #24]
 425              	.LVL32:
  76:Core/Src/lcd_stm32f0.c ****     // Register Select (RS)line low (data sent will now be read as commands)
 426              		.loc 1 76 5 is_stmt 0 view .LVU97
 427 000c FFF7FEFF 		bl	HAL_GPIO_WritePin
 428              	.LVL33:
  78:Core/Src/lcd_stm32f0.c ****     HAL_Delay(3);
 429              		.loc 1 78 5 is_stmt 1 view .LVU98
 430 0010 2046     		mov	r0, r4
 431 0012 FFF7FEFF 		bl	write_byte
 432              	.LVL34:
  79:Core/Src/lcd_stm32f0.c **** }
 433              		.loc 1 79 5 view .LVU99
 434 0016 0320     		movs	r0, #3
 435 0018 FFF7FEFF 		bl	HAL_Delay
 436              	.LVL35:
  80:Core/Src/lcd_stm32f0.c **** 
 437              		.loc 1 80 1 is_stmt 0 view .LVU100
 438 001c 10BD     		pop	{r4, pc}
 439              	.L35:
 440 001e 00BF     		.align	2
 441              	.L34:
 442 0020 00000000 		.word	mylcd
 443              		.cfi_endproc
 444              	.LFE130:
 446              		.section	.text.init_LCD,"ax",%progbits
 447              		.align	1
 448              		.global	init_LCD
 449              		.syntax unified
 450              		.thumb
 451              		.thumb_func
 453              	init_LCD:
 454              	.LFB132:
ARM GAS  C:\Users\justi\AppData\Local\Temp\ccpgLgQ8.s 			page 14


 112:Core/Src/lcd_stm32f0.c ****     HAL_Delay(30);			// Allow the LCD some power up time (~30ms)
 455              		.loc 1 112 1 is_stmt 1 view -0
 456              		.cfi_startproc
 457              		@ args = 0, pretend = 0, frame = 8
 458              		@ frame_needed = 0, uses_anonymous_args = 0
 459 0000 00B5     		push	{lr}
 460              		.cfi_def_cfa_offset 4
 461              		.cfi_offset 14, -4
 462 0002 83B0     		sub	sp, sp, #12
 463              		.cfi_def_cfa_offset 16
 113:Core/Src/lcd_stm32f0.c **** 
 464              		.loc 1 113 5 view .LVU102
 465 0004 1E20     		movs	r0, #30
 466 0006 FFF7FEFF 		bl	HAL_Delay
 467              	.LVL36:
 115:Core/Src/lcd_stm32f0.c ****     //Therefore 1us is 
 468              		.loc 1 115 5 view .LVU103
 115:Core/Src/lcd_stm32f0.c ****     //Therefore 1us is 
 469              		.loc 1 115 30 is_stmt 0 view .LVU104
 470 000a FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 471              	.LVL37:
 115:Core/Src/lcd_stm32f0.c ****     //Therefore 1us is 
 472              		.loc 1 115 23 view .LVU105
 473 000e 0190     		str	r0, [sp, #4]
 117:Core/Src/lcd_stm32f0.c **** 
 474              		.loc 1 117 5 is_stmt 1 view .LVU106
 117:Core/Src/lcd_stm32f0.c **** 
 475              		.loc 1 117 43 is_stmt 0 view .LVU107
 476 0010 019B     		ldr	r3, [sp, #4]
 477 0012 5B0A     		lsrs	r3, r3, #9
 478 0014 0B4A     		ldr	r2, .L38
 479 0016 A2FB0323 		umull	r2, r3, r2, r3
 480 001a DB08     		lsrs	r3, r3, #3
 117:Core/Src/lcd_stm32f0.c **** 
 481              		.loc 1 117 27 view .LVU108
 482 001c 0A4A     		ldr	r2, .L38+4
 483 001e 9362     		str	r3, [r2, #40]
 130:Core/Src/lcd_stm32f0.c ****     lcd_command(FOURBIT_MODE);		// Set LCD into 4 bit mode
 484              		.loc 1 130 5 is_stmt 1 view .LVU109
 485 0020 3320     		movs	r0, #51
 486 0022 FFF7FEFF 		bl	lcd_command
 487              	.LVL38:
 131:Core/Src/lcd_stm32f0.c ****     lcd_command(DISPLAY_ON);		// Turn display on and set up cursor
 488              		.loc 1 131 5 view .LVU110
 489 0026 3220     		movs	r0, #50
 490 0028 FFF7FEFF 		bl	lcd_command
 491              	.LVL39:
 132:Core/Src/lcd_stm32f0.c ****     lcd_command(TWOLINE_MODE);		// Set up 2 lines and character size
 492              		.loc 1 132 5 view .LVU111
 493 002c 0C20     		movs	r0, #12
 494 002e FFF7FEFF 		bl	lcd_command
 495              	.LVL40:
 133:Core/Src/lcd_stm32f0.c ****     lcd_command(CLEAR);			// Clear display
 496              		.loc 1 133 5 view .LVU112
 497 0032 2820     		movs	r0, #40
 498 0034 FFF7FEFF 		bl	lcd_command
 499              	.LVL41:
ARM GAS  C:\Users\justi\AppData\Local\Temp\ccpgLgQ8.s 			page 15


 134:Core/Src/lcd_stm32f0.c **** }
 500              		.loc 1 134 5 view .LVU113
 501 0038 0120     		movs	r0, #1
 502 003a FFF7FEFF 		bl	lcd_command
 503              	.LVL42:
 135:Core/Src/lcd_stm32f0.c **** 
 504              		.loc 1 135 1 is_stmt 0 view .LVU114
 505 003e 03B0     		add	sp, sp, #12
 506              		.cfi_def_cfa_offset 4
 507              		@ sp needed
 508 0040 5DF804FB 		ldr	pc, [sp], #4
 509              	.L39:
 510              		.align	2
 511              	.L38:
 512 0044 ADC5A700 		.word	10995117
 513 0048 00000000 		.word	mylcd
 514              		.cfi_endproc
 515              	.LFE132:
 517              		.section	.text.lcd_putchar,"ax",%progbits
 518              		.align	1
 519              		.global	lcd_putchar
 520              		.syntax unified
 521              		.thumb
 522              		.thumb_func
 524              	lcd_putchar:
 525              	.LVL43:
 526              	.LFB133:
 150:Core/Src/lcd_stm32f0.c ****     HAL_GPIO_WritePin(mylcd.RS_port,mylcd.RS_pin,1);//	GPIOC->BSRR |= LCD_RS_SET;	// Register Selec
 527              		.loc 1 150 1 is_stmt 1 view -0
 528              		.cfi_startproc
 529              		@ args = 0, pretend = 0, frame = 0
 530              		@ frame_needed = 0, uses_anonymous_args = 0
 150:Core/Src/lcd_stm32f0.c ****     HAL_GPIO_WritePin(mylcd.RS_port,mylcd.RS_pin,1);//	GPIOC->BSRR |= LCD_RS_SET;	// Register Selec
 531              		.loc 1 150 1 is_stmt 0 view .LVU116
 532 0000 10B5     		push	{r4, lr}
 533              		.cfi_def_cfa_offset 8
 534              		.cfi_offset 4, -8
 535              		.cfi_offset 14, -4
 536 0002 0446     		mov	r4, r0
 151:Core/Src/lcd_stm32f0.c ****     write_byte(character);
 537              		.loc 1 151 5 is_stmt 1 view .LVU117
 538 0004 044B     		ldr	r3, .L42
 539 0006 0122     		movs	r2, #1
 540 0008 998B     		ldrh	r1, [r3, #28]
 541 000a 9869     		ldr	r0, [r3, #24]
 542              	.LVL44:
 151:Core/Src/lcd_stm32f0.c ****     write_byte(character);
 543              		.loc 1 151 5 is_stmt 0 view .LVU118
 544 000c FFF7FEFF 		bl	HAL_GPIO_WritePin
 545              	.LVL45:
 152:Core/Src/lcd_stm32f0.c ****     //mylcd.position[mylcd.cursor[1]]++;
 546              		.loc 1 152 5 is_stmt 1 view .LVU119
 547 0010 2046     		mov	r0, r4
 548 0012 FFF7FEFF 		bl	write_byte
 549              	.LVL46:
 154:Core/Src/lcd_stm32f0.c **** 
 550              		.loc 1 154 1 is_stmt 0 view .LVU120
ARM GAS  C:\Users\justi\AppData\Local\Temp\ccpgLgQ8.s 			page 16


 551 0016 10BD     		pop	{r4, pc}
 552              	.L43:
 553              		.align	2
 554              	.L42:
 555 0018 00000000 		.word	mylcd
 556              		.cfi_endproc
 557              	.LFE133:
 559              		.section	.text.lcd_putstring,"ax",%progbits
 560              		.align	1
 561              		.global	lcd_putstring
 562              		.syntax unified
 563              		.thumb
 564              		.thumb_func
 566              	lcd_putstring:
 567              	.LVL47:
 568              	.LFB134:
 185:Core/Src/lcd_stm32f0.c ****     unsigned char count = 0;
 569              		.loc 1 185 36 is_stmt 1 view -0
 570              		.cfi_startproc
 571              		@ args = 0, pretend = 0, frame = 0
 572              		@ frame_needed = 0, uses_anonymous_args = 0
 185:Core/Src/lcd_stm32f0.c ****     unsigned char count = 0;
 573              		.loc 1 185 36 is_stmt 0 view .LVU122
 574 0000 38B5     		push	{r3, r4, r5, lr}
 575              		.cfi_def_cfa_offset 16
 576              		.cfi_offset 3, -16
 577              		.cfi_offset 4, -12
 578              		.cfi_offset 5, -8
 579              		.cfi_offset 14, -4
 580 0002 0546     		mov	r5, r0
 186:Core/Src/lcd_stm32f0.c **** 
 581              		.loc 1 186 5 is_stmt 1 view .LVU123
 582              	.LVL48:
 188:Core/Src/lcd_stm32f0.c ****     	lcd_putchar(instring[count]);	// Write each character to LCD
 583              		.loc 1 188 5 view .LVU124
 186:Core/Src/lcd_stm32f0.c **** 
 584              		.loc 1 186 19 is_stmt 0 view .LVU125
 585 0004 0024     		movs	r4, #0
 188:Core/Src/lcd_stm32f0.c ****     	lcd_putchar(instring[count]);	// Write each character to LCD
 586              		.loc 1 188 11 view .LVU126
 587 0006 03E0     		b	.L45
 588              	.LVL49:
 589              	.L46:
 189:Core/Src/lcd_stm32f0.c **** 	    count++;
 590              		.loc 1 189 6 is_stmt 1 view .LVU127
 591 0008 FFF7FEFF 		bl	lcd_putchar
 592              	.LVL50:
 190:Core/Src/lcd_stm32f0.c **** 	}
 593              		.loc 1 190 6 view .LVU128
 190:Core/Src/lcd_stm32f0.c **** 	}
 594              		.loc 1 190 11 is_stmt 0 view .LVU129
 595 000c 0134     		adds	r4, r4, #1
 596              	.LVL51:
 190:Core/Src/lcd_stm32f0.c **** 	}
 597              		.loc 1 190 11 view .LVU130
 598 000e E4B2     		uxtb	r4, r4
 599              	.LVL52:
ARM GAS  C:\Users\justi\AppData\Local\Temp\ccpgLgQ8.s 			page 17


 600              	.L45:
 188:Core/Src/lcd_stm32f0.c ****     	lcd_putchar(instring[count]);	// Write each character to LCD
 601              		.loc 1 188 12 is_stmt 1 view .LVU131
 188:Core/Src/lcd_stm32f0.c ****     	lcd_putchar(instring[count]);	// Write each character to LCD
 602              		.loc 1 188 20 is_stmt 0 view .LVU132
 603 0010 285D     		ldrb	r0, [r5, r4]	@ zero_extendqisi2
 188:Core/Src/lcd_stm32f0.c ****     	lcd_putchar(instring[count]);	// Write each character to LCD
 604              		.loc 1 188 12 view .LVU133
 605 0012 0028     		cmp	r0, #0
 606 0014 F8D1     		bne	.L46
 192:Core/Src/lcd_stm32f0.c **** 
 607              		.loc 1 192 1 view .LVU134
 608 0016 38BD     		pop	{r3, r4, r5, pc}
 192:Core/Src/lcd_stm32f0.c **** 
 609              		.loc 1 192 1 view .LVU135
 610              		.cfi_endproc
 611              	.LFE134:
 613              		.global	mylcd
 614              		.section	.bss.mylcd,"aw",%nobits
 615              		.align	2
 618              	mylcd:
 619 0000 00000000 		.space	44
 619      00000000 
 619      00000000 
 619      00000000 
 619      00000000 
 620              		.text
 621              	.Letext0:
 622              		.file 2 "c:\\users\\justi\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xpa
 623              		.file 3 "c:\\users\\justi\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xpa
 624              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f446xx.h"
 625              		.file 5 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 626              		.file 6 "Core/Inc/lcd_stm32f0.h"
 627              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 628              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
ARM GAS  C:\Users\justi\AppData\Local\Temp\ccpgLgQ8.s 			page 18


DEFINED SYMBOLS
                            *ABS*:00000000 lcd_stm32f0.c
C:\Users\justi\AppData\Local\Temp\ccpgLgQ8.s:21     .text.init_LCD_pins:00000000 $t
C:\Users\justi\AppData\Local\Temp\ccpgLgQ8.s:27     .text.init_LCD_pins:00000000 init_LCD_pins
C:\Users\justi\AppData\Local\Temp\ccpgLgQ8.s:84     .text.init_LCD_pins:00000038 $d
C:\Users\justi\AppData\Local\Temp\ccpgLgQ8.s:618    .bss.mylcd:00000000 mylcd
C:\Users\justi\AppData\Local\Temp\ccpgLgQ8.s:91     .text.delay:00000000 $t
C:\Users\justi\AppData\Local\Temp\ccpgLgQ8.s:97     .text.delay:00000000 delay
C:\Users\justi\AppData\Local\Temp\ccpgLgQ8.s:146    .text.delay:00000024 $d
C:\Users\justi\AppData\Local\Temp\ccpgLgQ8.s:151    .text.pulse_strobe:00000000 $t
C:\Users\justi\AppData\Local\Temp\ccpgLgQ8.s:157    .text.pulse_strobe:00000000 pulse_strobe
C:\Users\justi\AppData\Local\Temp\ccpgLgQ8.s:203    .text.pulse_strobe:00000038 $d
C:\Users\justi\AppData\Local\Temp\ccpgLgQ8.s:208    .text.check_bit:00000000 $t
C:\Users\justi\AppData\Local\Temp\ccpgLgQ8.s:214    .text.check_bit:00000000 check_bit
C:\Users\justi\AppData\Local\Temp\ccpgLgQ8.s:252    .text.write_byte:00000000 $t
C:\Users\justi\AppData\Local\Temp\ccpgLgQ8.s:258    .text.write_byte:00000000 write_byte
C:\Users\justi\AppData\Local\Temp\ccpgLgQ8.s:396    .text.write_byte:00000098 $d
C:\Users\justi\AppData\Local\Temp\ccpgLgQ8.s:401    .text.lcd_command:00000000 $t
C:\Users\justi\AppData\Local\Temp\ccpgLgQ8.s:407    .text.lcd_command:00000000 lcd_command
C:\Users\justi\AppData\Local\Temp\ccpgLgQ8.s:442    .text.lcd_command:00000020 $d
C:\Users\justi\AppData\Local\Temp\ccpgLgQ8.s:447    .text.init_LCD:00000000 $t
C:\Users\justi\AppData\Local\Temp\ccpgLgQ8.s:453    .text.init_LCD:00000000 init_LCD
C:\Users\justi\AppData\Local\Temp\ccpgLgQ8.s:512    .text.init_LCD:00000044 $d
C:\Users\justi\AppData\Local\Temp\ccpgLgQ8.s:518    .text.lcd_putchar:00000000 $t
C:\Users\justi\AppData\Local\Temp\ccpgLgQ8.s:524    .text.lcd_putchar:00000000 lcd_putchar
C:\Users\justi\AppData\Local\Temp\ccpgLgQ8.s:555    .text.lcd_putchar:00000018 $d
C:\Users\justi\AppData\Local\Temp\ccpgLgQ8.s:560    .text.lcd_putstring:00000000 $t
C:\Users\justi\AppData\Local\Temp\ccpgLgQ8.s:566    .text.lcd_putstring:00000000 lcd_putstring
C:\Users\justi\AppData\Local\Temp\ccpgLgQ8.s:615    .bss.mylcd:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_Delay
HAL_RCC_GetHCLKFreq
